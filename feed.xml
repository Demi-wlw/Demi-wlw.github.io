<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://demi-wlw.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://demi-wlw.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-03-20T12:52:46+00:00</updated><id>https://demi-wlw.github.io/feed.xml</id><title type="html">blank</title><subtitle>Luwei Wang&apos;s personal homepage.
</subtitle><entry><title type="html">Understanding ChatGPT</title><link href="https://demi-wlw.github.io/blog/2023/ChatGPT/" rel="alternate" type="text/html" title="Understanding ChatGPT" /><published>2023-03-19T00:00:00+00:00</published><updated>2023-03-19T00:00:00+00:00</updated><id>https://demi-wlw.github.io/blog/2023/ChatGPT</id><content type="html" xml:base="https://demi-wlw.github.io/blog/2023/ChatGPT/"><![CDATA[<p class="text-justify">OpenAI is back in the headlines with news that it is updating its viral ChatGPT with a new version called <a href="https://openai.com/research/gpt-4">GPT-4</a>. If ChatGPT is the car, then GPT-4 is the engine: a powerful general technology that can be shaped down to a number of different uses. GPT-3 and now 4 are actually the internet’s best-known language-processing AI models.</p>

<h2 id="what-is-chatgpt">What is ChatGPT?</h2>

<p class="text-justify"><a href="https://chat.openai.com/chat">ChatGPT</a> is a large language model developed by OpenAI, which is based on the GPT (Generative Pre-trained Transformer) architecture. It is designed to understand natural language, generate human-like responses, and complete a variety of language tasks including language translation, text summarization, question-answering and more. It has been trained on a massive amount of text data from the internet, books, and other sources, allowing it to learn and understand a wide range of topics and provide informative and engaging responses.</p>

<h2 id="what-is-gpt">What is GPT?</h2>

<p class="text-justify">GPT (Generative Pre-trained Transformer) is a type of neural network architecture used for natural language processing (NLP) tasks, such as language modeling, text classification, and machine translation. It was first introduced by OpenAI in 2018, and has been used in a wide variety of applications.</p>

<p class="text-justify">The GPT architecture is based on the <strong>Transformer</strong> model, which was introduced in 2017 by Vaswani et al.<d-cite key="attension2017"></d-cite> allowing to capture long-term dependencies in text without the need for recurrent neural networks and generate high-quality language output. GPT models are <strong>pre-trained</strong> on large amounts of text data using an unsupervised learning approach, where the model is trained to <strong><em>predict the next word</em></strong> in a sequence of text. The pre-training allows the model to learn the statistical language patterns and contextual relationships within natural language text, which can then be fine-tuned on specific NLP tasks, such as language translation, text classification, and text generation with smaller amounts of labeled data.</p>

<p class="text-justify">GPT has been a major breakthrough in natural language processing and the version GPT-3 has 175 billion parameters. It has been used to achieve state-of-the-art results on a wide variety of language tasks and has been adopted by a variety of industries for language-related applications such as chatbots, text summarization, and language translation. Its ability to pre-train on large amounts of data and adapt to new tasks with few examples makes it a highly versatile and valuable tool for language-related applications.</p>

<hr />

<h2 id="gpt-models">GPT Models</h2>

<ul class="text-justify">
  <li>GPT-1 is open-source <a href="https://openai.com/research/language-unsupervised">here</a> with paper “Improving Language Understanding
by Generative Pre-Training”.</li>
</ul>
<ul class="text-justify">
  <li>GPT-2 is also available <a href="https://openai.com/research/better-language-models">here</a> with paper “Language Models are Unsupervised Multitask Learners”.</li>
</ul>
<ul>
  <li>GPT-3 has published paper <d-cite key="GPT-3"></d-cite>.</li>
</ul>

<p class="text-justify">The first version of GPT was introduced based on the ideas of transformers<d-footnote>A good website for detailed learning can be found <a href="https://lena-voita.github.io/nlp_course/seq2seq_and_attention.html#transformer_intro">here</a> <d-cite key="voita2020nlpCourse"></d-cite>.</d-footnote> and <a href="https://arxiv.org/abs/1511.01432">unsupervised pre-training</a>. Its results provide a convincing example that pairing supervised learning methods with unsupervised pre-training works very well. In summary, GPT as the name suggested, adopts <strong><em>generative pre-training</em></strong> of a language model on a diverse corpus of unlabeled text, followed by discriminative <strong><em>supervised fine-tuning</em></strong> on each specific task.</p>

<h3 id="generative-pre-training">Generative pre-training</h3>

<p class="text-justify">The term <em>generative pre-training</em> represents the unsupervised pre-training of the generative model.<d-footnote>They used a multi-layer Transformer decoder to produce an output distribution over target tokens.</d-footnote> Given an unsupervised corpus of tokens \(\mathcal{U} = \{u_1,\dots,u_n\}\), they use a standard language modeling objective to maximize the following likelihood:</p>

\[L_1(\mathcal{U})=\sum_i\log P(u_i|u_{i-k},\dots,u_{i-1};\Theta)\]

<p class="text-justify">where \(k\) is the size of the context window, and the conditional probability \(P\) is modeled using a neural network with parameters \(\Theta\) trained using stochastic gradient descent. <strong>Intuitively, we train the Transformer-based model to predict the next token within the \(k\)-context window using unlabeled text from which we also extract the latent features \(h\).</strong></p>

<h3 id="supervised-fine-tuning">Supervised fine-tuning</h3>

<p class="text-justify">After training the model with the objective function above, they adapte the parameters to the supervised target task which is referring to <em>supervised fine-tuning</em>. Assume a labeled dataset \(\mathcal{C}\), where each instance consists of a sequence of input tokens, \(x^1,\dots, x^m\), along with a label \(y\). The inputs are passed through the pre-trained model to obtain the final transformer block’s activation \(h_l^m\), which is then fed into an added linear output layer with parameters \(W_y\) to predict \(y\):</p>

\[P(y|x^1,\dots,x^m)=softmax(h_l^mW_y).\]

<p>This gives us the following objective to maximize:</p>

\[L_2(\mathcal{C})=\sum_{(x,y)}\log P(y|x^1,\dots,x^m)\]

<p class="text-justify">They additionally found that including language modeling as an auxiliary objective to the fine-tuning helped learning by (a) improving generalization of the supervised model, and (b) accelerating convergence. Specifically, we optimize the following objective (with weight \(\lambda\)): \(L_3(\mathcal{C})=L_2(\mathcal{C})+\lambda*L_1(\mathcal{C})\).</p>

<p class="text-justify">Some tasks, like question answering or textual entailment, have structured inputs such as ordered sentence pairs, or triplets of document, question, and answers that are different from the contiguous sequences of text inputs of pre-trained model so they require some modifications to apply GPT. This results in the <strong><em>input transformations</em></strong> which allow us to avoid making extensive changes to the architecture across tasks. A brief description of these input transformations is shown in Figure 1 (credit to the <a href="https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf">paper</a>).</p>

<div class="row justify-content-sm-center">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    
    <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/GPT1_inputTrans-480.webp" />
    <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/GPT1_inputTrans-800.webp" />
    <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/GPT1_inputTrans-1400.webp" />
    

    <!-- Fallback to the original file -->
    <img src="/assets/img/GPT1_inputTrans.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="GPT-1 with input transformations" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

  </picture>

</figure>

    </div>
</div>

<hr />

<h2 id="improvements-of-gpts">Improvements of GPTs</h2>

<p class="text-justify"><strong>GPT-1</strong> employes the idea of unsupervised learning for training representations of words using large amounts of unlabeled data consisting of terabytes of information and then integrates supervised learning for fine-tuning to improve performance on a wide range of NLP tasks. However, it has drawbacks including (1) Compute requirements (expensive pre-training step) (2) The limits and bias of learning about the world through text, and (3) Still brittle generalization.</p>

<p class="text-justify"><strong>GPT-2</strong> is a larger model with 1.5 billion parameters following the details of GPT-1 (117 million parameters) with a few modifications. This larger size allows it to capture more complex language patterns and relationships. In short, GPT-2 is a direct scale-up of GPT-1, with more than \(10\times\) the parameters and trained on more than \(10\times\) the amount of data.</p>

<p><strong>GPT-3</strong> uses a variety of techniques to improve performance, including:</p>
<ol class="text-justify">
  <li>Larger size: has 175 billion parameters which allows to capture even more complex language patterns and relationships.</li>
  <li>Adaptive computation: dynamically adjusts the number of parameters used for each task, allowing it to allocate more resources to complex tasks and fewer resources to simpler tasks.</li>
  <li>Few-shot learning: learns to perform a new task with just a few examples, making it highly flexible and adaptable to new tasks and contexts.</li>
  <li>Prompt engineering: can be given a natural language prompt to generate text that fits a specific context or follows a specific style.</li>
</ol>]]></content><author><name>Luwei Wang</name></author><category term="site-posts" /><category term="machine-learning/AI" /><category term="NLP" /><category term="application" /><summary type="html"><![CDATA[a summary of ChatGPT and GPT techniques]]></summary></entry><entry><title type="html">Summary of Latex code for symbols</title><link href="https://demi-wlw.github.io/blog/2023/Latex-symbols/" rel="alternate" type="text/html" title="Summary of Latex code for symbols" /><published>2023-03-10T00:00:00+00:00</published><updated>2023-03-10T00:00:00+00:00</updated><id>https://demi-wlw.github.io/blog/2023/Latex-symbols</id><content type="html" xml:base="https://demi-wlw.github.io/blog/2023/Latex-symbols/"><![CDATA[]]></content><author><name></name></author><category term="site-posts" /><category term="code" /><summary type="html"><![CDATA[Redirecting to a pdf]]></summary></entry></feed>